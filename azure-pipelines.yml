trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '58981af6-f245-457d-99f9-075b1fd63c89'
  imageRepository: 'dotnetdocker'
  containerRegistry: 'acrsurapureddyswetha.azurecr.io'
  dockerfilePath: './samples/aspnetapp/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acrsurapureddyswetha1802ec00-auth'
  vmImageName: 'ubuntu-latest'
  aksResourceGroup: 'aks-test-rg'
  aksClusterName: 'aks-test-cluster'

stages:
- stage: PreDeploymentValidation
  displayName: Pre-Deployment Validation
  jobs:
  - job: PreValidation
    displayName: Pre-Deployment Validation
    pool: Default
    steps:
    - script: |
        chmod +x ./scripts/pre-deploy-validation.sh
        ./scripts/pre-deploy-validation.sh
      displayName: 'Run Pre-Deployment Validation'

- stage: Build
  displayName: Build stage
  dependsOn: PreDeploymentValidation
  jobs:
  - job: Build
    displayName: Build
    pool: Default
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool: Default
    environment: 'karanbawa48dotnetdocker-4599.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

- stage: PostDeploymentValidation
  displayName: Post-Deployment Validation
  dependsOn: Deploy
  jobs:
  - job: PostValidation
    displayName: Post-Deployment Validation
    pool: Default
    steps:
    - script: |
        chmod +x ./scripts/post-deploy-validation.sh
        ./scripts/post-deploy-validation.sh
      displayName: 'Run Post-Deployment Validation'
